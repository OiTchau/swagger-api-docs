openapi: 3.1.0
paths:
  /v1/external-api/public/company:
    post:
      operationId: CompaniesController_createPartnerCompany
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCompanyRequestBody'
      responses:
        '201':
          description: Company is successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCompanyResponseDto'
        '401': &ref_0
          description: Invalid provided header token
      tags: &ref_1
        - company
      security: &ref_2
        - bearer: []
    get:
      operationId: CompaniesController_getCompany
      parameters:
        - name: externalCompanyId
          required: true
          in: query
          description: External company id (identifier defined on the client side)
          schema:
            type: string
      responses:
        '200':
          description: Company is successfully retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCompanyResponseDto'
        '401': *ref_0
        '404':
          description: Company is not found
      tags: *ref_1
      security: *ref_2
  /v1/external-api/public/company/{externalCompanyId}:
    put:
      operationId: CompaniesController_updatePartnerCompany
      parameters:
        - name: externalCompanyId
          required: true
          in: path
          description: External company id (identifier defined on the client side)
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCompanyRequestBody'
      responses:
        '200':
          description: Company is successfully updated
        '401': *ref_0
        '404':
          description: Company is not found
      tags: *ref_1
      security: *ref_2
  /v1/external-api/public/company/{externalCompanyId}/employee:
    post:
      operationId: UserProfilesController_createPartnerCompanyEmployee
      parameters:
        - name: externalCompanyId
          required: true
          in: path
          description: External company id (identifier defined on the client side)
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateExternalUserProfileRequestBody'
      responses:
        '201':
          description: External user profile successfully created
        '401': &ref_3
          description: Invalid provided header token
        '404':
          description: Company is not found
        '409':
          description: User profile is already exists
      tags: &ref_4
        - employee
      security: &ref_5
        - bearer: []
    put:
      operationId: UserProfilesController_updatePartnerCompanyEmployee
      parameters:
        - name: externalCompanyId
          required: true
          in: path
          description: External company id (identifier defined on the client side)
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateExternalUserProfileRequestBody'
      responses:
        '204':
          description: External user profile successfully updated
        '401': *ref_3
        '404':
          description: Company is not found
        '409':
          description: User profile is not found
      tags: *ref_4
      security: *ref_5
    get:
      operationId: UserProfilesController_getEmployeeByIdentifiers
      parameters:
        - name: externalCompanyId
          required: true
          in: path
          description: External company id (identifier defined on the client side)
          schema:
            type: string
        - name: uuid
          required: false
          in: query
          description: Entity uuid
          schema:
            type: string
        - name: externalId
          required: false
          in: query
          description: Entity external id
          schema:
            type: string
      responses:
        '200':
          description: User profile is successfully retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseEntityIdsResponse'
        '401': *ref_3
        '404':
          description: Company or user profile is not found
      tags: *ref_4
      security: *ref_5
  /v1/external-api/public/company/{externalCompanyId}/employee/{externalProfileId}/auth-url:
    get:
      operationId: UserProfilesController_getExternalAuthUrl
      parameters:
        - name: externalCompanyId
          required: true
          in: path
          description: External company id (identifier defined on the client side)
          schema:
            type: string
        - name: externalProfileId
          required: true
          in: path
          description: >-
            User profile user profile external id (identifier defined on the
            client side)
          schema:
            type: string
      responses:
        '200':
          description: Auth url for iframe successfully retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetExternalAuthUrlResponse'
        '401': *ref_3
        '404':
          description: Company or user profile is not found
      tags: *ref_4
      security: *ref_5
  /v1/external-api/public/company/{externalCompanyId}/clients:
    post:
      operationId: ClientsController_createPartnerCompanyClient
      parameters:
        - name: externalCompanyId
          required: true
          in: path
          description: External company id (identifier defined on the client side)
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateClientRequestBody'
      responses:
        '201':
          description: External client successfully created
        '401': &ref_6
          description: Invalid provided header token
        '404':
          description: Company is not found
      tags: &ref_7
        - default
      security: &ref_8
        - bearer: []
    put:
      operationId: ClientsController_updatePartnerCompanyClient
      parameters:
        - name: externalCompanyId
          required: true
          in: path
          description: External company id (identifier defined on the client side)
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateClientRequestBody'
      responses:
        '204':
          description: External client successfully updated
        '401': *ref_6
        '404':
          description: Company is not found
      tags: *ref_7
      security: *ref_8
    get:
      operationId: ClientsController_getClient
      parameters:
        - name: externalCompanyId
          required: true
          in: path
          description: External company id (identifier defined on the client side)
          schema:
            type: string
        - name: uuid
          required: false
          in: query
          description: Entity uuid
          schema:
            type: string
        - name: externalId
          required: false
          in: query
          description: Entity external id
          schema:
            type: string
      responses:
        '401': *ref_6
        '404':
          description: Company or client is not found
      tags: *ref_7
      security: *ref_8
  /v1/external-api/public/company/{externalCompanyId}/clients/managers:
    put:
      operationId: ClientsController_updatePartnerCompanyEmployee
      parameters:
        - name: externalCompanyId
          required: true
          in: path
          description: External company id (identifier defined on the client side)
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientManagersRequestBody'
      responses:
        '204':
          description: External client managers successfully updated
        '401': *ref_6
        '404':
          description: Company is not found
        '409':
          description: User profiles is not found
      tags: *ref_7
      security: *ref_8
  /v1/external-api/public/company/{externalCompanyId}/services:
    post:
      operationId: ServicesController_createPartnerCompanyClient
      parameters:
        - name: externalCompanyId
          required: true
          in: path
          description: External company id (identifier defined on the client side)
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateServiceRequestBody'
      responses:
        '201':
          description: External service successfully created
        '401': &ref_9
          description: Invalid provided header token
        '404':
          description: Company is not found
      tags: &ref_10
        - default
      security: &ref_11
        - bearer: []
    put:
      operationId: ServicesController_updatePartnerCompanyClient
      parameters:
        - name: externalCompanyId
          required: true
          in: path
          description: External company id (identifier defined on the client side)
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateServiceRequestBody'
      responses:
        '204':
          description: External service successfully updated
        '401': *ref_9
        '404':
          description: Company is not found
      tags: *ref_10
      security: *ref_11
    get:
      operationId: ServicesController_getProjectByIdentifiers
      parameters:
        - name: externalCompanyId
          required: true
          in: path
          description: External company id (identifier defined on the client side)
          schema:
            type: string
        - name: uuid
          required: false
          in: query
          description: Entity uuid
          schema:
            type: string
        - name: externalId
          required: false
          in: query
          description: Entity external id
          schema:
            type: string
      responses:
        '200':
          description: ''
        '401': *ref_9
      tags: *ref_10
      security: *ref_11
  /v1/external-api/public/company/{externalCompanyId}/tasks:
    post:
      operationId: TasksController_createTask
      parameters:
        - name: externalCompanyId
          required: true
          in: path
          description: External company id (identifier defined on the client side)
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTaskRequestBodyV2'
      responses:
        '201':
          description: ''
        '401': &ref_12
          description: Invalid provided header token
      tags: &ref_13
        - default
      security: &ref_14
        - bearer: []
    put:
      operationId: TasksController_updateTask
      parameters:
        - name: externalCompanyId
          required: true
          in: path
          description: External company id (identifier defined on the client side)
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTaskRequestBodyV2'
      responses:
        '200':
          description: ''
        '401': *ref_12
      tags: *ref_13
      security: *ref_14
    delete:
      operationId: TasksController_delete
      parameters:
        - name: externalCompanyId
          required: true
          in: path
          description: External company id (identifier defined on the client side)
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteTaskRequestBodyV2'
      responses:
        '200':
          description: ''
        '401': *ref_12
      tags: *ref_13
      security: *ref_14
    get:
      operationId: TasksController_getProjectByIdentifiers
      parameters:
        - name: externalCompanyId
          required: true
          in: path
          description: External company id (identifier defined on the client side)
          schema:
            type: string
        - name: uuid
          required: false
          in: query
          description: Entity uuid
          schema:
            type: string
        - name: externalId
          required: false
          in: query
          description: Entity external id
          schema:
            type: string
      responses:
        '200':
          description: ''
        '401': *ref_12
      tags: *ref_13
      security: *ref_14
  /v1/external-api/public/company/{externalCompanyId}/projects:
    post:
      operationId: ProjectsController_create
      parameters:
        - name: externalCompanyId
          required: true
          in: path
          description: External company id (identifier defined on the client side)
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProjectRequestBody'
      responses:
        '201':
          description: ''
        '401': &ref_15
          description: Invalid provided header token
      tags: &ref_16
        - default
      security: &ref_17
        - bearer: []
    put:
      operationId: ProjectsController_update
      parameters:
        - name: externalCompanyId
          required: true
          in: path
          description: External company id (identifier defined on the client side)
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProjectRequestBody'
      responses:
        '200':
          description: ''
        '401': *ref_15
      tags: *ref_16
      security: *ref_17
    delete:
      operationId: ProjectsController_delete
      parameters:
        - name: externalCompanyId
          required: true
          in: path
          description: External company id (identifier defined on the client side)
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteProjectRequestBody'
      responses:
        '200':
          description: ''
        '401': *ref_15
      tags: *ref_16
      security: *ref_17
    get:
      operationId: ProjectsController_getProjectByIdentifiers
      parameters:
        - name: externalCompanyId
          required: true
          in: path
          description: External company id (identifier defined on the client side)
          schema:
            type: string
        - name: uuid
          required: false
          in: query
          description: Entity uuid
          schema:
            type: string
        - name: externalId
          required: false
          in: query
          description: Entity external id
          schema:
            type: string
      responses:
        '200':
          description: ''
        '401': *ref_15
      tags: *ref_16
      security: *ref_17
  /v1/external-api/public/company/{externalCompanyId}/projects/archive:
    put:
      operationId: ProjectsController_archive
      parameters:
        - name: externalCompanyId
          required: true
          in: path
          description: External company id (identifier defined on the client side)
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArchiveProjectRequestBody'
      responses:
        '200':
          description: ''
        '401': *ref_15
      tags: *ref_16
      security: *ref_17
  /v1/external-api/public/company/{externalCompanyId}/projects/members:
    post:
      operationId: ProjectsController_assignMembers
      parameters:
        - name: externalCompanyId
          required: true
          in: path
          description: External company id (identifier defined on the client side)
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignProjectMembersRequestBody'
      responses:
        '201':
          description: ''
        '401': *ref_15
      tags: *ref_16
      security: *ref_17
    delete:
      operationId: ProjectsController_deleteMember
      parameters:
        - name: externalCompanyId
          required: true
          in: path
          description: External company id (identifier defined on the client side)
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteProjectMemberRequestBody'
      responses:
        '200':
          description: ''
        '401': *ref_15
      tags: *ref_16
      security: *ref_17
  /v1/external-api/public/health:
    get:
      operationId: PublicHealthController_check
      parameters: []
      responses:
        '200':
          description: The Health Check is successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ok
                  info:
                    type: object
                    example: &ref_18
                      database: &ref_19
                        status: up
                    additionalProperties:
                      type: object
                      properties:
                        status:
                          type: string
                      additionalProperties:
                        type: string
                    nullable: true
                  error:
                    type: object
                    example: {}
                    additionalProperties:
                      type: object
                      properties:
                        status:
                          type: string
                      additionalProperties:
                        type: string
                    nullable: true
                  details:
                    type: object
                    example: *ref_18
                    additionalProperties:
                      type: object
                      properties:
                        status:
                          type: string
                      additionalProperties:
                        type: string
        '503':
          description: The Health Check is not successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  info:
                    type: object
                    example: *ref_18
                    additionalProperties:
                      type: object
                      properties:
                        status:
                          type: string
                      additionalProperties:
                        type: string
                    nullable: true
                  error:
                    type: object
                    example:
                      redis: &ref_20
                        status: down
                        message: Could not connect
                    additionalProperties:
                      type: object
                      properties:
                        status:
                          type: string
                      additionalProperties:
                        type: string
                    nullable: true
                  details:
                    type: object
                    example:
                      database: *ref_19
                      redis: *ref_20
                    additionalProperties:
                      type: object
                      properties:
                        status:
                          type: string
                      additionalProperties:
                        type: string
      tags:
        - health check
  /v1/external-api/public/configuration/partner/{partnerUuid}/webhooks:
    post:
      operationId: ConfigurationController_upsertPartnerWebhookConfiguration
      parameters:
        - name: partnerUuid
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertWebhookRequestBody'
      responses:
        '201':
          description: ''
        '401': &ref_21
          description: Invalid provided header token
      tags: &ref_22
        - configuration
      security: &ref_23
        - bearer: []
    get:
      operationId: ConfigurationController_getPartnerWebhookConfiguration
      parameters:
        - name: partnerUuid
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
        '401': *ref_21
      tags: *ref_22
      security: *ref_23
    delete:
      operationId: ConfigurationController_deletePartnerWebhook
      parameters:
        - name: partnerUuid
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
        '401': *ref_21
      tags: *ref_22
      security: *ref_23
  /v1/external-api/public/configuration/company/{externalCompanyId}/webhooks:
    post:
      operationId: ConfigurationController_upsertCompanyWebhookConfiguration
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertWebhookRequestBody'
      responses:
        '201':
          description: ''
        '401': *ref_21
      tags: *ref_22
      security: *ref_23
    get:
      operationId: ConfigurationController_getCompanyWebhookConfiguration
      parameters: []
      responses:
        '200':
          description: ''
        '401': *ref_21
      tags: *ref_22
      security: *ref_23
    delete:
      operationId: ConfigurationController_deleteCompanyWebhook
      parameters: []
      responses:
        '200':
          description: ''
        '401': *ref_21
      tags: *ref_22
      security: *ref_23
info:
  title: Day.io external API
  description: |-
    <h2>Summary</h2>
          <p>This is API documentation for <b>Day.io</b> API.<br />
          To start using the API, communicate with <b>Day.io</b> to do all required configuration and provide the specific token required to make API calls.<br />
          This token must be added to each request as <code>Authorization: 'Bearer &lt;token&gt;'</code>.<br />
          There are two types of tokens:</p>
          <ul>
            <li><b>Partner level permissions</b> - used to create a new company and configure partner-level webhooks.</li>
            <li><b>Company level permissions</b> - used to invoke actions specific to a provided company.</li>
          </ul><br />
          <h2>Flow</h2>
          <ol>
            <li>Communicate with <b>Day.io</b> and receive a partner token.</li>
            <li>Provide webhook configuration using 
            <a href="#configuration/ConfigurationController_upsertPartnerWebhookConfiguration" target="_blank">Configure webhooks</a> and store the token to verify the webhook sender. More details are in the webhooks docs.</li>
            <li>Create a company using 
            <a href="#company/CompaniesController_createPartnerCompany" target="_blank">Create Company</a> and store the company token to use it in company-specific actions. This will also create an owner user.</li>
            <li>Add company employees using 
            <a href="#employee/UserProfilesController_createPartnerCompanyEmployee" target="_blank">Create Employee</a>.</li>
            <li>Generate an authorization URL for opening the <b>Day.io</b> iframe using 
            <a href="#employee/UserProfilesController_getExternalAuthUrl" target="_blank">Generate auth URL</a>.</li>
          </ol>
  version: 1.2.0
  contact: {}
tags: []
servers:
  - url: https://stg-api.oitchau.com.br
    description: Stage server (uses test data)
components:
  securitySchemes:
    bearer:
      scheme: bearer
      bearerFormat: JWT
      type: http
  schemas:
    CdcPayload:
      type: object
      properties: {}
    Address:
      type: object
      properties:
        city:
          type: string
          description: City
          example: Hulme
        country:
          type: string
          description: Country code
          example: GB
        formatted:
          type: string
          description: Full location string
          example: 100 Princess Rd, Hulme, Manchester M15 5AS, England
        state:
          type: string
          description: State
          example: England
        street:
          type: string
          description: Street
          example: Princess Rd
        streetNumber:
          type: string
          description: Street number
          example: '100'
        zip:
          type: string
          description: Zip code
          example: M15 5AS
      required:
        - country
        - formatted
    Location:
      type: object
      properties:
        address:
          description: Address object
          allOf:
            - $ref: '#/components/schemas/Address'
      required:
        - address
    Owner:
      type: object
      properties:
        email:
          type: string
          description: Owner user email
        fullName:
          type: string
          description: Owner user full name
        externalId:
          type: string
          description: User primary identifier, used as user id reference between systems
      required:
        - email
        - fullName
        - externalId
    CreateCompanyRequestBody:
      type: object
      properties:
        name:
          type: string
          description: Company name
          example: My company
        location:
          description: Location information
          allOf:
            - $ref: '#/components/schemas/Location'
        externalCompanyId:
          type: string
          description: >-
            Company primary identifier, used as company id reference between
            systems
        owner:
          description: Initial owner user information
          allOf:
            - $ref: '#/components/schemas/Owner'
        locale:
          type: string
          description: Locale preference
          enum:
            - en
            - es
            - he
            - pt-BR
            - pt-PT
          example: pt-BR
      required:
        - name
        - externalCompanyId
        - owner
    CreateCompanyResponseDto:
      type: object
      properties:
        uuid:
          type: string
          description: Company internal uuid (in Dayio system)
        externalId:
          type: string
          description: Company external id (in the client system)
        token:
          type: string
          description: Token that will be added into request Authorization header
      required:
        - uuid
        - externalId
        - token
    UpdateCompanyRequestBody:
      type: object
      properties:
        name:
          type: string
          description: Company name
          example: My company
        location:
          description: Location information
          allOf:
            - $ref: '#/components/schemas/Location'
      required:
        - name
    GetCompanyResponseDto:
      type: object
      properties:
        id:
          type: number
          description: Company ID
        slug:
          type: string
          description: Company slug
        companyType:
          type: string
          description: Company type
        active:
          type: boolean
          description: Is the company active?
        name:
          type: string
          description: Company name
        createdAt:
          type: string
          description: Creation date
        updatedAt:
          type: string
          description: Last update date
        creator:
          type: number
          description: Creator ID
        defaultLocation:
          type: number
          description: Default location ID
        taxPayerId:
          type: object
          description: Tax payer ID
          nullable: true
        employeeCount:
          type: object
          description: Employee count
          nullable: true
        employer:
          type: number
          description: Employer ID
        uuid:
          type: string
          description: Company UUID
        sourcePlatform:
          type: string
          description: Source platform
        sourceType:
          type: string
          description: Source type
        logoId:
          type: object
          description: Logo ID
          nullable: true
        logoVersion:
          type: object
          description: Logo version
          nullable: true
        companySubscriptionId:
          type: object
          description: Company subscription ID
          nullable: true
        tabletCode:
          type: string
          description: Tablet code for the Kiosk App
          example: 1a2b3c
        referredById:
          type: object
          description: Referred by ID
          nullable: true
        documentLogoId:
          type: object
          description: Document logo ID
          nullable: true
        clientId:
          type: object
          description: Client ID
          nullable: true
        clientSecret:
          type: object
          description: Client secret
          nullable: true
        settingsUpdatedAt:
          type: object
          description: Settings updated at
          nullable: true
        locale:
          type: object
          description: Locale
          nullable: true
        currency:
          type: object
          description: Currency
          nullable: true
        legacyHubspotId:
          type: object
          description: Legacy Hubspot ID
          nullable: true
        gainsightId:
          type: object
          description: Gainsight ID
          nullable: true
        beaconManufacture:
          type: string
          description: Beacon manufacture
        timesheetStartDay:
          type: number
          description: Timesheet start day
        organizationId:
          type: object
          description: Organization ID
          nullable: true
        externalId:
          type: string
          description: External ID
        partner:
          type: string
          description: Partner UUID
      required:
        - id
        - slug
        - companyType
        - active
        - name
        - createdAt
        - updatedAt
        - creator
        - defaultLocation
        - taxPayerId
        - employeeCount
        - employer
        - uuid
        - sourcePlatform
        - sourceType
        - logoId
        - logoVersion
        - companySubscriptionId
        - tabletCode
        - referredById
        - documentLogoId
        - clientId
        - clientSecret
        - settingsUpdatedAt
        - locale
        - currency
        - legacyHubspotId
        - gainsightId
        - beaconManufacture
        - timesheetStartDay
        - organizationId
        - externalId
        - partner
    CreateExternalUserProfileRequestBody:
      type: object
      properties:
        externalId:
          type: string
          description: User profile id from client system
        subsidiary:
          type: string
          description: Subsidiary identifier (uuid)
        cpf:
          type: string
          description: CPF
        pis:
          type: string
          description: PIS
        department:
          type: string
          description: Department identifier (uuid)
        matricula:
          type: string
          description: Matricula
        isSupervisor:
          type: boolean
          description: Is provided user supervisor
        subsidiaryCnpj:
          type: string
          description: Subsidiary tax id/cnpj
        supervisorExternalId:
          type: string
          description: >-
            If user is a member of the team of some supervisor, provide his
            identifier
        position:
          type: string
          description: Position name
        email:
          type: string
          description: Email
        phoneNumber:
          type: string
          description: Phone number
        active:
          type: boolean
          description: Is provider user active
        deactivationDate:
          type: string
          description: Deactivation date
        associateProducts:
          type: array
          description: Is provider user active
          example: &ref_24
            - ta
          items: &ref_25
            type: string
            enum:
              - ta
              - projects
        name:
          type: string
          description: User profile full name
      required:
        - externalId
        - name
    UpdateExternalUserProfileRequestBody:
      type: object
      properties:
        externalId:
          type: string
          description: User profile id from client system
        subsidiary:
          type: string
          description: Subsidiary identifier (uuid)
        cpf:
          type: string
          description: CPF
        pis:
          type: string
          description: PIS
        department:
          type: string
          description: Department identifier (uuid)
        matricula:
          type: string
          description: Matricula
        isSupervisor:
          type: boolean
          description: Is provided user supervisor
        subsidiaryCnpj:
          type: string
          description: Subsidiary tax id/cnpj
        supervisorExternalId:
          type: string
          description: >-
            If user is a member of the team of some supervisor, provide his
            identifier
        position:
          type: string
          description: Position name
        email:
          type: string
          description: Email
        phoneNumber:
          type: string
          description: Phone number
        active:
          type: boolean
          description: Is provider user active
        deactivationDate:
          type: string
          description: Deactivation date
        associateProducts:
          type: array
          description: Is provider user active
          example: *ref_24
          items: *ref_25
        name:
          type: string
          description: User profile full name
      required:
        - externalId
        - name
    GetExternalAuthUrlResponse:
      type: object
      properties:
        url:
          type: string
          description: Auth url that is used to work open the iframe
      required:
        - url
    BaseEntityIdsResponse:
      type: object
      properties:
        uuid:
          type: string
          description: Entity internal uuid (in Dayio system)
        externalId:
          type: string
          description: Entity external id (in the client system)
        id:
          type: number
          description: Entity internal id (in Dayio system)
      required:
        - uuid
        - externalId
        - id
    CreateClientRequest:
      type: object
      properties:
        name:
          type: string
          description: Client name
        email:
          type: string
          description: Contact person email
        contactPerson:
          type: string
          description: Contact person name
        phoneNumber:
          type: string
          description: Contact person phone
        externalId:
          type: string
          description: Identifier on the external system
      required:
        - name
        - externalId
    CreateClientRequestBody:
      type: object
      properties:
        content:
          $ref: '#/components/schemas/CreateClientRequest'
      required:
        - content
    UpdateClientRequest:
      type: object
      properties:
        name:
          type: string
          description: Client name
        email:
          type: string
          description: Contact person email
        contactPerson:
          type: string
          description: Contact person name
        phoneNumber:
          type: string
          description: Contact person phone
      required:
        - name
    UpdateClientRequestBody:
      type: object
      properties:
        uuid:
          type: string
          description: Entity uuid
        externalId:
          type: string
          description: Entity external id
        content:
          $ref: '#/components/schemas/UpdateClientRequest'
      required:
        - content
    ApiEntityIdentifiersRequest:
      type: object
      properties:
        uuid:
          type: string
          description: Entity uuid
        externalId:
          type: string
          description: Entity external id
    ClientManagersRequest:
      type: object
      properties:
        managersToAdd:
          description: Client Managers to link
          type: array
          items:
            $ref: '#/components/schemas/ApiEntityIdentifiersRequest'
        managersToDelete:
          description: Client Managers to unlink
          type: array
          items:
            $ref: '#/components/schemas/ApiEntityIdentifiersRequest'
    ClientManagersRequestBody:
      type: object
      properties:
        uuid:
          type: string
          description: Entity uuid
        externalId:
          type: string
          description: Entity external id
        content:
          $ref: '#/components/schemas/ClientManagersRequest'
      required:
        - content
    CreateServiceRequest:
      type: object
      properties:
        name:
          type: string
          description: Service name
        costPerHour:
          type: number
          description: Service cost per hour
        createdBy:
          description: Profile uuid which is invoked the creation
          allOf:
            - $ref: '#/components/schemas/ApiEntityIdentifiersRequest'
        externalId:
          type: string
          description: Service external id
      required:
        - name
        - costPerHour
        - createdBy
    CreateServiceRequestBody:
      type: object
      properties:
        content:
          $ref: '#/components/schemas/CreateServiceRequest'
      required:
        - content
    UpdateServiceRequest:
      type: object
      properties:
        name:
          type: string
          description: Service name
        costPerHour:
          type: number
          description: Service cost per hour
        updatedBy:
          description: Profile uuid which is invoked the creation
          allOf:
            - $ref: '#/components/schemas/ApiEntityIdentifiersRequest'
        startDate:
          type: string
          description: Service start date
      required:
        - name
        - costPerHour
        - updatedBy
        - startDate
    UpdateServiceRequestBody:
      type: object
      properties:
        uuid:
          type: string
          description: Entity uuid
        externalId:
          type: string
          description: Entity external id
        content:
          $ref: '#/components/schemas/UpdateServiceRequest'
      required:
        - content
    CreateTaskRequestV2:
      type: object
      properties:
        name:
          type: string
          description: Task name
        services:
          description: Related task services
          type: array
          items:
            type: string
        tags:
          description: Related task tags
          type: array
          items:
            type: string
        externalAttributes:
          title: Related task tags
          type: array
          items:
            type: string
        project:
          title: Related task project
          allOf:
            - $ref: '#/components/schemas/ApiEntityIdentifiersRequest'
        createdBy:
          description: Reference to user that invoked the action
          allOf:
            - $ref: '#/components/schemas/ApiEntityIdentifiersRequest'
        externalId:
          type: string
          description: Task external identifier
      required:
        - name
        - project
        - createdBy
    CreateTaskRequestBodyV2:
      type: object
      properties:
        content:
          $ref: '#/components/schemas/CreateTaskRequestV2'
      required:
        - content
    UpdateTaskRequestV2:
      type: object
      properties:
        name:
          type: string
          description: Task name
        services:
          description: Related task services
          type: array
          items:
            type: string
        tags:
          description: Related task tags
          type: array
          items:
            type: string
        externalAttributes:
          title: Related task tags
          type: array
          items:
            type: string
        project:
          title: Related task project
          allOf:
            - $ref: '#/components/schemas/ApiEntityIdentifiersRequest'
        updatedBy:
          description: Reference to user that invoked the action
          allOf:
            - $ref: '#/components/schemas/ApiEntityIdentifiersRequest'
      required:
        - name
        - project
        - updatedBy
    UpdateTaskRequestBodyV2:
      type: object
      properties:
        uuid:
          type: string
          description: Entity uuid
        externalId:
          type: string
          description: Entity external id
        content:
          $ref: '#/components/schemas/UpdateTaskRequestV2'
      required:
        - content
    DeleteTaskRequestV2:
      type: object
      properties:
        updatedBy:
          description: Reference to user that invoked the action
          allOf:
            - $ref: '#/components/schemas/ApiEntityIdentifiersRequest'
      required:
        - updatedBy
    DeleteTaskRequestBodyV2:
      type: object
      properties:
        uuid:
          type: string
          description: Entity uuid
        externalId:
          type: string
          description: Entity external id
        content:
          $ref: '#/components/schemas/DeleteTaskRequestV2'
      required:
        - content
    CreateProjectRequest:
      type: object
      properties:
        client:
          description: Client to which referencing project
          allOf:
            - $ref: '#/components/schemas/ApiEntityIdentifiersRequest'
        estimatedCost:
          type: number
          description: Estimated cost of the project
        estimatedHours:
          type: number
          description: Estimated hours of the project
        id:
          type: string
          description: Project id
        isPublic:
          type: boolean
          description: >-
            Is given project public or not, means that all company members have
            access to it
        locationUuids:
          description: Locations that selectable for this project
          type: array
          items:
            type: string
        name:
          type: string
          description: Project name
        owner:
          description: Reference to user that is owner
          allOf:
            - $ref: '#/components/schemas/ApiEntityIdentifiersRequest'
        restrictBasedOnSchedule:
          type: boolean
        customFieldsSettings:
          description: Additional custom fields for the project
          type: array
          items:
            type: string
        createdBy:
          description: Reference to user that invoked the action
          allOf:
            - $ref: '#/components/schemas/ApiEntityIdentifiersRequest'
        externalId:
          type: string
          description: Project external identifier
      required:
        - client
        - estimatedCost
        - estimatedHours
        - id
        - isPublic
        - name
        - owner
        - restrictBasedOnSchedule
        - createdBy
    CreateProjectRequestBody:
      type: object
      properties:
        content:
          $ref: '#/components/schemas/CreateProjectRequest'
      required:
        - content
    UpdateProjectRequest:
      type: object
      properties:
        client:
          description: Client to which referencing project
          allOf:
            - $ref: '#/components/schemas/ApiEntityIdentifiersRequest'
        estimatedCost:
          type: number
          description: Estimated cost of the project
        estimatedHours:
          type: number
          description: Estimated hours of the project
        id:
          type: string
          description: Project id
        isPublic:
          type: boolean
          description: >-
            Is given project public or not, means that all company members have
            access to it
        locationUuids:
          description: Locations that selectable for this project
          type: array
          items:
            type: string
        name:
          type: string
          description: Project name
        owner:
          description: Reference to user that is owner
          allOf:
            - $ref: '#/components/schemas/ApiEntityIdentifiersRequest'
        restrictBasedOnSchedule:
          type: boolean
        customFieldsSettings:
          description: Additional custom fields for the project
          type: array
          items:
            type: string
        updatedBy:
          description: Reference to user that invoked the action
          allOf:
            - $ref: '#/components/schemas/ApiEntityIdentifiersRequest'
      required:
        - client
        - estimatedCost
        - estimatedHours
        - id
        - isPublic
        - name
        - owner
        - restrictBasedOnSchedule
        - updatedBy
    UpdateProjectRequestBody:
      type: object
      properties:
        uuid:
          type: string
          description: Entity uuid
        externalId:
          type: string
          description: Entity external id
        content:
          $ref: '#/components/schemas/UpdateProjectRequest'
      required:
        - content
    ArchiveProjectRequest:
      type: object
      properties:
        updatedBy:
          description: Reference to user that invoked the action
          allOf:
            - $ref: '#/components/schemas/ApiEntityIdentifiersRequest'
      required:
        - updatedBy
    ArchiveProjectRequestBody:
      type: object
      properties:
        uuid:
          type: string
          description: Entity uuid
        externalId:
          type: string
          description: Entity external id
        content:
          $ref: '#/components/schemas/ArchiveProjectRequest'
      required:
        - content
    DeleteProjectRequest:
      type: object
      properties:
        updatedBy:
          description: Reference to user that invoked the action
          allOf:
            - $ref: '#/components/schemas/ApiEntityIdentifiersRequest'
      required:
        - updatedBy
    DeleteProjectRequestBody:
      type: object
      properties:
        uuid:
          type: string
          description: Entity uuid
        externalId:
          type: string
          description: Entity external id
        content:
          $ref: '#/components/schemas/DeleteProjectRequest'
      required:
        - content
    AssignProjectMembersRequest:
      type: object
      properties:
        userProfiles:
          description: Reference to users that associated with project
          type: array
          items:
            type: string
        services:
          description: Reference to services associated with project
          type: array
          items:
            type: string
        requestedBy:
          description: Reference to user that invoked the action
          allOf:
            - $ref: '#/components/schemas/ApiEntityIdentifiersRequest'
      required:
        - userProfiles
        - services
        - requestedBy
    AssignProjectMembersRequestBody:
      type: object
      properties:
        uuid:
          type: string
          description: Entity uuid
        externalId:
          type: string
          description: Entity external id
        content:
          $ref: '#/components/schemas/AssignProjectMembersRequest'
      required:
        - content
    DeleteProjectMemberRequest:
      type: object
      properties:
        userProfile:
          description: Reference to user that will be un-linked from project
          allOf:
            - $ref: '#/components/schemas/ApiEntityIdentifiersRequest'
        service:
          description: Reference to service that will be un-linked from project
          allOf:
            - $ref: '#/components/schemas/ApiEntityIdentifiersRequest'
      required:
        - userProfile
        - service
    DeleteProjectMemberRequestBody:
      type: object
      properties:
        uuid:
          type: string
          description: Entity uuid
        externalId:
          type: string
          description: Entity external id
        content:
          $ref: '#/components/schemas/DeleteProjectMemberRequest'
      required:
        - content
    UpsertWebhookRequestBody:
      type: object
      properties:
        webhookUrl:
          type: string
        returnFullEntity:
          type: boolean
      required:
        - webhookUrl
        - returnFullEntity
